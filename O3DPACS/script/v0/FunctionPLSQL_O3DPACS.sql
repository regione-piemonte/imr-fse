CREATE OR REPLACE FUNCTION JBOSSPACSDB."AES_DECRYPT" (data IN RAW, key IN VARCHAR2) RETURN VARCHAR2 IS
encryption_mode NUMBER := DBMS_CRYPTO.ENCRYPT_AES128 + DBMS_CRYPTO.CHAIN_CBC  + DBMS_CRYPTO.PAD_PKCS5;
realKey VARCHAR2(1024 CHAR) := key;
BEGIN
IF(LENGTH(realKey)<16) THEN
realKey:=(key||('7777777777777777'));
END IF;
realKey:= substr(realKey, 1, 16);
RETURN UTL_RAW.CAST_TO_VARCHAR2(DBMS_CRYPTO.DECRYPT
(data, encryption_mode, UTL_I18N.STRING_TO_RAW(realKey, 'AL32UTF8')));
END;

CREATE OR REPLACE FUNCTION JBOSSPACSDB."AES_ENCRYPT" (data IN VARCHAR2, key IN VARCHAR2) RETURN RAW IS
encryption_mode NUMBER := DBMS_CRYPTO.ENCRYPT_AES128 + DBMS_CRYPTO.CHAIN_CBC  + DBMS_CRYPTO.PAD_PKCS5;
realKey VARCHAR2(1024 CHAR) := key;
BEGIN
IF(LENGTH(realKey)<16) THEN
realKey:=(key||('7777777777777777'));
END IF;
realKey:= substr(realKey, 1, 16);
RETURN DBMS_CRYPTO.ENCRYPT(UTL_I18N.STRING_TO_RAW (data, 'AL32UTF8'),
encryption_mode, UTL_I18N.STRING_TO_RAW(realKey, 'AL32UTF8') );
END;

CREATE OR REPLACE FUNCTION JBOSSPACSDB."ISMOVECOMPLETED" (P_ACCESSIONNUMBER IN VARCHAR2) RETURN number IS
V_DIFF NUMBER := 1;
BEGIN

SELECT 
MAX(NUMBEROFSTUDYRELATEDINSTANCES) - SUM(IMAGES+NONIMAGES+STRUCTREPS+PRESSTATES) INTO V_DIFF
FROM (
SELECT
    (SELECT COUNT(*) FROM IMAGES IM WHERE IM.SERIESFK = SE.SERIESINSTANCEUID) AS IMAGES, 
    (SELECT COUNT(*) FROM NONIMAGES NI WHERE NI.SERIESFK = SE.SERIESINSTANCEUID) AS NONIMAGES,
    (SELECT COUNT(*) FROM STRUCTREPS SR WHERE SR.SERIESFK = SE.SERIESINSTANCEUID) AS STRUCTREPS,
    (SELECT COUNT(*) FROM PRESSTATES PT WHERE PT.SERIESFK = SE.SERIESINSTANCEUID) AS PRESSTATES,
    ST.STUDYINSTANCEUID,
    ST.NUMBEROFSTUDYRELATEDINSTANCES
FROM
    STUDIES   ST, SERIES    SE
WHERE
     SE.STUDYFK = ST.STUDYINSTANCEUID
     AND ST.ACCESSIONNUMBER = P_ACCESSIONNUMBER
     AND ST.DEPRECATED = 0
);

IF v_diff = 0 THEN
    RETURN 1;
END IF;

RETURN 0;
END;

CREATE OR REPLACE FUNCTION JBOSSPACSDB."ISMOVECOMPLETEDCHECKALL" (P_ACCESSIONNUMBER IN VARCHAR2, P_RIS IN VARCHAR2, P_MESSAGEID IN VARCHAR2, P_STRUCTASR IN VARCHAR2, P_PATIENTID IN VARCHAR2, P_ISSUERID IN VARCHAR2) RETURN number IS
V_DIFF NUMBER := 1;
V_RETRY VARCHAR2(4000) := '';
V_CLAUSE VARCHAR2(2000) := '';
V_QUERY  VARCHAR2(4000) := '';
V_CHECK_RETRY  VARCHAR2(4000) := '';
V_RET   NUMBER := 0;
BEGIN

IF P_ACCESSIONNUMBER IS NOT NULL THEN
    V_CLAUSE := ' AND MV.ACCESSIONNUMBER = '''|| P_ACCESSIONNUMBER|| '''';
    DBMS_OUTPUT.PUT_LINE(V_CLAUSE);
END IF;

IF P_RIS IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.RIS = '''|| P_RIS|| '''';
    DBMS_OUTPUT.PUT_LINE(V_CLAUSE);
END IF;

IF P_MESSAGEID IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.MESSAGEID = '''|| P_MESSAGEID|| '''';
    DBMS_OUTPUT.PUT_LINE(V_CLAUSE);
END IF;

IF P_STRUCTASR IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.STRUCTASR = ''' || P_STRUCTASR|| '''';
    DBMS_OUTPUT.PUT_LINE(V_CLAUSE);
END IF;

IF P_PATIENTID IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.PATIENTID = '''|| P_PATIENTID|| '''';
   /* DBMS_OUTPUT.PUT_LINE(V_CLAUSE);*/
END IF;

IF P_ISSUERID IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.IDISSUER = '''|| P_ISSUERID|| '''';
    /* DBMS_OUTPUT.PUT_LINE(V_CLAUSE);*/
END IF;

V_QUERY :='SELECT 
MAX(NUMBEROFSTUDYRELATEDINSTANCES) - SUM(IMAGES+NONIMAGES+STRUCTREPS+PRESSTATES)
FROM (
SELECT
    (SELECT COUNT(*) FROM IMAGES IM WHERE IM.SERIESFK = SE.SERIESINSTANCEUID) AS IMAGES, 
    (SELECT COUNT(*) FROM NONIMAGES NI WHERE NI.SERIESFK = SE.SERIESINSTANCEUID) AS NONIMAGES,
    (SELECT COUNT(*) FROM STRUCTREPS SR WHERE SR.SERIESFK = SE.SERIESINSTANCEUID) AS STRUCTREPS,
    (SELECT COUNT(*) FROM PRESSTATES PT WHERE PT.SERIESFK = SE.SERIESINSTANCEUID) AS PRESSTATES,
    ST.STUDYINSTANCEUID,
    ST.NUMBEROFSTUDYRELATEDINSTANCES,
    MV.idRetry
FROM
    STUDIES   ST, SERIES    SE, MOVESTUDYHISTORY MV
WHERE
     SE.STUDYFK = ST.STUDYINSTANCEUID
     AND ST.ACCESSIONNUMBER = '''||P_ACCESSIONNUMBER||'''
     AND ST.DEPRECATED = 0' || v_clause ||'
   -- AND ROWNUM = 1
   -- ORDER BY EVENTTIME DESC
)';


DBMS_OUTPUT.PUT_LINE(v_query);

EXECUTE IMMEDIATE v_query into V_DIFF;


V_QUERY :='SELECT
    MV.idRetry
FROM
    MOVESTUDYHISTORY MV
WHERE 1=1
     '|| v_clause ||'
    AND ROWNUM = 1
    ORDER BY EVENTTIME DESC';

DBMS_OUTPUT.PUT_LINE(v_query);

EXECUTE IMMEDIATE v_query into V_RETRY;

DBMS_OUTPUT.PUT_LINE(V_DIFF);
DBMS_OUTPUT.PUT_LINE(V_RETRY);

IF V_DIFF = 0 THEN
    V_RET := 1;
END IF;

IF V_RET = 0 THEN
    SELECT V_RETRY - (SELECT paramValue FROM GLOBALCONFIGURATION WHERE paramKey = 'MoveStudyMaxRetry') INTO V_CHECK_RETRY FROM DUAL;
END IF;

IF V_CHECK_RETRY > 0 THEN
    V_RET := -1; 
END IF;

RETURN V_RET;

EXCEPTION
    WHEN NO_DATA_FOUND THEN  
    
    RETURN  0;
END;

CREATE OR REPLACE FUNCTION JBOSSPACSDB."UNIX_TIMESTAMP" RETURN NUMBER IS
  l_seconds  NUMBER(19);
  BEGIN
    select ROUND(to_number(sysdate - to_date('01-01-1970','DD-MM-YYYY')) * (24 * 60 * 60)) INTO l_seconds from dual;
    RETURN l_seconds;
  END;
