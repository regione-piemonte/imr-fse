create or replace FUNCTION "ISMOVECOMPLETEDCHECKALL" (P_ACCESSIONNUMBER IN VARCHAR2, P_RIS IN VARCHAR2, P_MESSAGEID IN VARCHAR2, P_STRUCTASR IN VARCHAR2, P_PATIENTID IN VARCHAR2, P_ISSUERID IN VARCHAR2) RETURN number IS
V_DIFF NUMBER := 1;
V_RETRY VARCHAR2(4000) := '';
V_CLAUSE VARCHAR2(2000) := '';
V_QUERY  VARCHAR2(4000) := '';
V_CHECK_RETRY  VARCHAR2(4000) := '';
V_RET   NUMBER := 0;
V_MSG   VARCHAR2(4000) := '';
BEGIN

IF P_ACCESSIONNUMBER IS NOT NULL THEN
    V_CLAUSE := ' AND MV.ACCESSIONNUMBER = '''|| P_ACCESSIONNUMBER|| '''';
    DBMS_OUTPUT.PUT_LINE(V_CLAUSE);
END IF;

IF P_RIS IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.RIS = '''|| P_RIS|| '''';
    DBMS_OUTPUT.PUT_LINE(V_CLAUSE);
END IF;

IF P_MESSAGEID IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.MESSAGEID = '''|| P_MESSAGEID|| '''';
    DBMS_OUTPUT.PUT_LINE(V_CLAUSE);
END IF;

IF P_STRUCTASR IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.STRUCTASR = ''' || P_STRUCTASR|| '''';
    DBMS_OUTPUT.PUT_LINE(V_CLAUSE);
END IF;

IF P_PATIENTID IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.PATIENTID = '''|| P_PATIENTID|| '''';
   /* DBMS_OUTPUT.PUT_LINE(V_CLAUSE);*/
END IF;

IF P_ISSUERID IS NOT NULL THEN
    V_CLAUSE := V_CLAUSE || ' AND MV.IDISSUER = '''|| P_ISSUERID|| '''';
    /* DBMS_OUTPUT.PUT_LINE(V_CLAUSE);*/
END IF;

V_QUERY :='SELECT 
MAX(NUMBEROFSTUDYRELATEDINSTANCES) - SUM(IMAGES+NONIMAGES+STRUCTREPS+PRESSTATES)
FROM (
SELECT
    (SELECT COUNT(*) FROM IMAGES IM WHERE IM.SERIESFK = SE.SERIESINSTANCEUID) AS IMAGES, 
    (SELECT COUNT(*) FROM NONIMAGES NI WHERE NI.SERIESFK = SE.SERIESINSTANCEUID) AS NONIMAGES,
    (SELECT COUNT(*) FROM STRUCTREPS SR WHERE SR.SERIESFK = SE.SERIESINSTANCEUID) AS STRUCTREPS,
    (SELECT COUNT(*) FROM PRESSTATES PT WHERE PT.SERIESFK = SE.SERIESINSTANCEUID) AS PRESSTATES,
    ST.STUDYINSTANCEUID,
    ST.NUMBEROFSTUDYRELATEDINSTANCES,
    MV.idRetry
FROM
    STUDIES   ST, SERIES    SE, MOVESTUDYHISTORY MV
WHERE
     SE.STUDYFK = ST.STUDYINSTANCEUID
     AND ST.ACCESSIONNUMBER = '''||P_ACCESSIONNUMBER||'''
     AND ST.DEPRECATED = 0
     AND MV.ENDMOV IS NOT NULL ' || v_clause ||'
)';


DBMS_OUTPUT.PUT_LINE(v_query);

EXECUTE IMMEDIATE v_query into V_DIFF;


V_QUERY :='SELECT
    MV.idRetry
FROM
    MOVESTUDYHISTORY MV
WHERE 1=1
     '|| v_clause ||'
    and mv.eventtime = ( select max(mv.eventtime)
                        FROM
                            MOVESTUDYHISTORY MV
                        WHERE 1=1 '|| v_clause ||')';

DBMS_OUTPUT.PUT_LINE(v_query);

EXECUTE IMMEDIATE v_query into V_RETRY;

DBMS_OUTPUT.PUT_LINE(V_DIFF);
DBMS_OUTPUT.PUT_LINE(V_RETRY);


IF V_DIFF = 0 THEN
    V_RET := 1;
END IF;

V_QUERY :='SELECT
    MV.ERRORMESSAGE
FROM
    MOVESTUDYHISTORY MV
WHERE 1=1
     '|| v_clause ||'
     and mv.eventtime = ( select max(mv.eventtime)
                        FROM
                            MOVESTUDYHISTORY MV
                        WHERE 1=1 '|| v_clause ||')';
    
V_MSG := '-1';

DBMS_OUTPUT.PUT_LINE(v_query);
IF V_RET = 0 THEN
    EXECUTE IMMEDIATE v_query into V_MSG;    
END IF;

DBMS_OUTPUT.PUT_LINE(V_MSG);

IF V_MSG = 'ERR_218' THEN
    V_RET := 218;
END IF;

IF V_RET = 0 THEN
    SELECT V_RETRY - (SELECT paramValue FROM GLOBALCONFIGURATION WHERE paramKey = 'MoveStudyMaxRetry') INTO V_CHECK_RETRY FROM DUAL;
END IF;

IF V_CHECK_RETRY > 0 THEN
    V_RET := -1; 
END IF;

RETURN V_RET;

EXCEPTION
    WHEN NO_DATA_FOUND THEN  
    
    RETURN  0;
END;